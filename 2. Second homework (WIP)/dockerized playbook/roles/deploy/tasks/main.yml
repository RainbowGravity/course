---
# tasks for deploy jsonservice
 
- name: Copy app files to the Virtual Machine
  become: no
  copy:
    owner: "{{ user }}"
    group: "{{ user }}"
    dest: "~/{{ app_dest }}"
    src: "app"

- name: Creates app directory
  file:
    path: /etc/nginx/ssl
    state: directory

#=====================================================
# Without one of these sections server will not start. 
# Only one of them able to use at the same time.
#=====================================================
# Uncomment this section if you want to use automatically generated SSL key and cert.
#=====================================================
# - name: Generate an OpenSSL private key
#   community.crypto.openssl_privatekey:
#     path: /etc/nginx/ssl/jsonservice.key
#     size: "{{ size }}"
# - name: Generate an SSL certificate on the Virual Machine
#   community.crypto.x509_certificate:
#     path: /etc/nginx/ssl/jsonservice.crt
#     privatekey_path: /etc/nginx/ssl/jsonservice.key
#     provider: selfsigned
#=====================================================
# Uncomment this section if you want to use your SSL key and cert
# *********(make sure they are passwordless)**********
# they must be named like "jsonservice.key" and "jsonservice.crt"
#=====================================================
# - name: Copy SSL key and certificate files to the Virtual Machine
#   copy:
#     owner: root
#     group: root
#     dest: "/etc/nginx/ssl/"
#     src: "ssl"
#=====================================================

- name: Set address in Nginx config file
  become: no
  replace: 
    dest: "~/{{ app_dest }}/app/nginx/nginx.conf"
    regexp: '"IP"'
    replace: "{{ address }}"

- name: Create and start services
  docker_compose:
    project_src: "/home/{{ user }}/{{ app_dest }}/app"
    build: yes
  register: output

- debug:
    var: output

- name: Delete intermediate images
  shell:
    cmd: docker image prune -f --filter label=stage=builder
  register: output

- name: Delete unused images
  docker_prune:
    images: yes
    images_filters:
      dangling: true

- debug:
    var: output

- name: Delete app files
  become: no
  file:
    path: "~/{{ app_dest }}"
    state: absent