---
# tasks for securing server 

# -----Debian 10 sources.list fixing-----

- name: Test for line in sources.list
  command: grep -Fxq "deb http://deb.debian.org/debian/ buster main" "{{ source }}sources.list" 
  check_mode: no
  ignore_errors: yes
  changed_when: no
  when:
   - ansible_distribution == 'Debian'
   - ansible_distribution_version <= '10'
  register: source_check

- name: Disable CDROM source
  lineinfile:
    dest: "{{ source }}sources.list"
    regexp: '^deb cdrom:*'
    line: ''
  when:
   - not source_check is skipped
   - source_check.rc == 0
  register: cdrom_ok

- name: Replace sources.list file
  copy:
    dest: /etc/apt/
    src: sources.list
    mode: '0550'
    owner: root
    group: root
    force: yes
  when:
   - not source_check is skipped
   - cdrom_ok is skipped

# -----End of sources.list fixing-----

- name: Update apt
  apt: 
    update_cache: yes

- name: Add ssh key
  authorized_key:
    user: "{{ user }}"
    key: "{{ lookup ('file', key_location) }}"
  register: add_ssh_key

- name: Disable empty password login
  lineinfile: 
    dest: "{{ sshd_config }}"
    regexp: '^#?PermitEmptyPasswords' 
    line: 'PermitEmptyPasswords no'
  notify: restart sshd

- name: Disable remote root login
  lineinfile: 
    dest: "{{ sshd_config }}"
    regexp: '^#?PermitRootLogin' 
    line: 'PermitRootLogin no'
  notify: restart sshd

- name: Disable password login
  lineinfile: 
    dest: "{{ sshd_config }}"
    regexp: '^(#\s*)?PasswordAuthentication '
    line: 'PasswordAuthentication no'
  when: 
    - add_ssh_key is succeeded 
    - not add_ssh_key is skipped
  notify: restart sshd

- name: Enable PAM
  lineinfile:     
    dest: "{{ sshd_config }}" 
    regexp: '^#?UsePAM' 
    line: 'UsePAM yes'
  notify: restart sshd

- name: Install UFW
  apt: 
    name: ufw 
    state: latest  

- name: Allow SSH connection
  ufw: 
    rule: allow 
    port: ssh

- name: Allow 80 port connection
  ufw: 
    port: 80
    rule: allow
    
- name: Allow 443 port connection
  ufw: 
    port: 443
    rule: allow

- name: Enable UFW and reject all incoming connections
  ufw: 
    policy: reject 
    state: enabled
