---
# tasks for deploy jsonservice
 
- name: Copy app files to the Virtual Machine
  become: no
  copy:
    owner: "{{ user }}"
    group: "{{ user }}"
    dest: "~/{{ app_dest }}"
    src: "app"

# -----------SSL CONFIGURATION------------

- name: Create directory for SSL
  file:
    path: /etc/nginx/ssl
    state: directory

# -------AUTO SSL WITHOUT PASSPHRASE------

- name: Generate an OpenSSL private key
  openssl_privatekey:
    path: /etc/nginx/ssl/jsonservice.key
  when: 
    - auto_ssl == true
    - ssl_passphrase == false

- name: Generate an SSL certificate on the Virual Machine
  community.crypto.x509_certificate:
    path: /etc/nginx/ssl/jsonservice.crt
    privatekey_path: /etc/nginx/ssl/jsonservice.key
    provider: selfsigned
  when: 
    - auto_ssl == true
    - ssl_passphrase == false

# ---------AUTO SSL WITH PASSPHRASE--------

- name: Generate an OpenSSL private key with passphrase
  openssl_privatekey:
    path: /etc/nginx/ssl/jsonservice.key
    passphrase: "{{ passphrase }}"
    cipher: "{{ cipher }}"
  when: 
    - auto_ssl == true
    - ssl_passphrase == true

- name: Generate an SSL certificate on the Virual Machine
  community.crypto.x509_certificate:
    path: /etc/nginx/ssl/jsonservice.crt
    privatekey_passphrase: "{{ passphrase }}"
    privatekey_path: /etc/nginx/ssl/jsonservice.key
    provider: selfsigned
  when: 
    - auto_ssl == true
    - ssl_passphrase == true

# -------AUTO SSL PASSPHRASE CONFIG-------

- name: Create directory for ssl_password_file
  file:
    path: "/etc/nginx/ssl/keys/"
    state: directory
  when: auto_ssl == true

- name: Create an empty ssl_password_file
  file:
    path: "/etc/nginx/ssl/keys/ssl_password_file"
    state: touch
    owner: root
    group: root
    mode: '0400'
  when: auto_ssl == true

- name: Write an SSL passphrase to the ssl_password_file
  copy: 
    content: "{{ passphrase }}"
    dest: "/etc/nginx/ssl/keys/ssl_password_file"
  when: 
    - auto_ssl == true
    - ssl_passphrase == true
 
- name: Copy SSL key and certificate files to the Virtual Machine
  copy:
    owner: root
    group: root
    mode: '0400'
    dest: "/etc/nginx/"
    src: "ssl"
  when: auto_ssl == false

#  -------END OF SSL CONFIGURATION-------

- name: Set address in Nginx config file
  become: no
  replace: 
    dest: "~/{{ app_dest }}/app/nginx/nginx.conf"
    regexp: '"IP"'
    replace: "{{ address }}"

- name: Create and start services
  docker_compose:
    project_src: "/home/{{ user }}/{{ app_dest }}/app"
    build: yes
  register: output

- debug:
    var: output

- name: Delete intermediate images
  shell:
    cmd: docker image prune -f --filter label=stage=builder
  register: output

- name: Delete unused images
  docker_prune:
    images: yes
    images_filters:
      dangling: true

# - debug:
#     var: output

- name: Delete app files
  become: no
  file:
    path: "~/{{ app_dest }}"
    state: absent